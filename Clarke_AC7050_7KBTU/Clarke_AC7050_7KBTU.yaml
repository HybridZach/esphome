# Define IR pin
substitutions:
  IR_pin: GPIOXXX

esphome:
  name: ac-control
  friendly_name: Aircon-Control

esp32:
  board: esp32-c6-devkitm-1
  variant: esp32c6
  flash_size: 4MB  
  framework:
    type: esp-idf

# Set up logging to console
logger:
  level: DEBUG
     

# Enable Home Assistant API and wifi connection
api:
  encryption:
    key: !secret api_key

ota:
  - platform: esphome
    password: !secret ota_key

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: none

# Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Ac-Control Fallback Hotspot"
    password: !secret ap_key

captive_portal:

# Set up IR transmitting
remote_transmitter:
  pin:
    number: ${IR_pin}
    inverted: False
  carrier_duty_percent: 50%


# Global variables
globals:
  - id: fan_mode_output
    type: std::string
    restore_value: no
    initial_value: '"cool"'

# ON/OFF & fan speed controls
switch:
  - platform: template
    name: "On/Off"
    icon: mdl:air-conditioner
    optimistic: True
    turn_on_action: 
      then:
        - remote_transmitter.transmit_pronto: 
            data: "0000 006D 0022 0000 015C 00AC 0017 0015 0017 0015 0017 0015 0017 0015 0017 0041 0017 0015 0017 0015 0017 0015 0017 0041 0017 0041 0017 0041 0017 0015 0017 0015 0017 0041 0017 0041 0017 0041 0017 0015 0017 0015 0017 0015 0017 0015 0017 0015 0017 0015 0017 0015 0017 0015 0017 0041 0017 0041 0017 0041 0017 0041 0017 0041 0017 0041 0017 0041 0017 0041 0017 0180"
    turn_off_action: 
      then:
        - remote_transmitter.transmit_pronto: 
            data: "0000 006D 0022 0000 015C 00AC 0017 0015 0017 0015 0017 0015 0017 0015 0017 0041 0017 0015 0017 0015 0017 0015 0017 0041 0017 0041 0017 0041 0017 0015 0017 0015 0017 0041 0017 0041 0017 0041 0017 0015 0017 0015 0017 0015 0017 0015 0017 0015 0017 0015 0017 0015 0017 0015 0017 0041 0017 0041 0017 0041 0017 0041 0017 0041 0017 0041 0017 0041 0017 0041 0017 0180"


  - platform: template
    name: "Fan Speed"
    icon: mdi:fan
    optimistic: True
    turn_on_action: 
      then:
        - remote_transmitter.transmit_pronto: 
            data: "0000 006D 0022 0000 015C 00AC 0016 0015 0016 0015 0016 0015 0016 0015 0016 0041 0016 0015 0016 0015 0016 0015 0016 0041 0016 0041 0016 0041 0016 0015 0016 0015 0016 0041 0016 0041 0016 0041 0016 0015 0016 0041 0016 0041 0017 0015 0016 0041 0016 0015 0016 0015 0016 0015 0016 0041 0016 0015 0016 0015 0016 0041 0016 0015 0016 0041 0017 0041 0016 0041 0016 0180"
    turn_off_action: 
      then:
        - remote_transmitter.transmit_pronto: 
            data: "0000 006D 0022 0000 015D 00AD 0017 0015 0017 0015 0017 0015 0016 0015 0017 0041 0017 0015 0017 0015 0017 0015 0017 0041 0017 0041 0017 0041 0017 0015 0017 0015 0017 0041 0017 0041 0017 0041 0017 0015 0016 0041 0017 0041 0017 0041 0017 0015 0017 0015 0017 0015 0017 0015 0016 0041 0016 0015 0017 0015 0017 0015 0016 0041 0017 0041 0017 0041 0017 0041 0016 0180"


# AC mode control
button:
  - platform: template
    name: "Cool"
    icon: mdl:emoticon-cool-outline
    on_press: 
      then:
        - remote_transmitter.transmit_pronto: 
            data: "0000 006D 0022 0000 015C 00AC 0016 0015 0017 0015 0017 0015 0017 0015 0016 0041 0017 0015 0017 0015 0017 0015 0017 0041 0017 0041 0017 0041 0017 0015 0017 0015 0016 0041 0016 0041 0016 0041 0016 0015 0016 0015 0016 0041 0017 0015 0016 0041 0016 0015 0016 0015 0016 0015 0016 0041 0016 0041 0017 0015 0017 0041 0016 0015 0016 0041 0017 0041 0017 0041 0016 0180"
        - lambda: id(fan_mode_output) = "Cool";
        - component.update: set_mode


  - platform: template
    name: "Dry"
    icon: mdi:air-humidifier
    on_press: 
      then:
        - remote_transmitter.transmit_pronto: 
            data: "0000 006D 0022 0000 015C 00AC 0017 0015 0017 0015 0017 0015 0017 0015 0017 0041 0017 0015 0017 0015 0017 0015 0017 0041 0017 0041 0017 0041 0017 0015 0017 0015 0017 0041 0017 0041 0017 0041 0017 0015 0017 0015 0017 0041 0017 0041 0017 0015 0017 0015 0017 0015 0017 0015 0017 0041 0017 0041 0017 0015 0017 0015 0017 0041 0017 0041 0017 0041 0017 0041 0017 0180"
        - lambda: id(fan_mode_output) = "Dry";
        - component.update: set_mode


  - platform: template
    name: "Fan ONLY"
    icon: mdi:fan-alert
    on_press: 
      then:
        - remote_transmitter.transmit_pronto: 
            data: "0000 006D 0022 0000 015D 00AD 0017 0015 0017 0015 0017 0015 0017 0015 0017 0041 0017 0015 0017 0015 0017 0015 0017 0041 0017 0041 0017 0041 0017 0015 0017 0015 0017 0041 0017 0041 0017 0041 0017 0015 0017 0015 0017 0015 0017 0041 0017 0015 0017 0015 0017 0015 0017 0015 0017 0041 0017 0041 0017 0041 0017 0015 0017 0041 0017 0041 0017 0041 0017 0041 0017 0180"
        - lambda: id(fan_mode_output) = "Fan ONLY";
        - component.update: set_mode


# Temperature controls
  - platform: template
    id: up
    name: "Up"
    icon: mdi:pan-up
    on_press: 
      then:
        - remote_transmitter.transmit_pronto: 
            data: "0000 006D 0022 0000 015C 00AC 0017 0015 0017 0015 0017 0015 0016 0015 0016 0041 0017 0015 0017 0015 0016 0015 0017 0041 0017 0041 0017 0041 0017 0015 0017 0015 0016 0041 0016 0041 0017 0041 0016 0041 0017 0015 0017 0041 0017 0015 0016 0041 0017 0015 0016 0015 0017 0015 0016 0015 0016 0041 0017 0015 0016 0041 0017 0015 0016 0041 0017 0041 0017 0041 0016 0180"


  - platform: template
    id: down
    name: "Down"
    icon: mdi:pan-down
    on_press: 
      then:
        - remote_transmitter.transmit_pronto: 
            data: "0000 006D 0022 0000 015C 00AC 0017 0015 0017 0015 0017 0015 0017 0015 0017 0041 0017 0015 0017 0015 0016 0015 0017 0041 0017 0041 0017 0041 0017 0015 0016 0015 0016 0041 0017 0041 0017 0041 0017 0041 0017 0015 0017 0041 0017 0041 0017 0015 0017 0015 0017 0015 0017 0015 0017 0015 0017 0041 0017 0015 0016 0015 0017 0041 0017 0041 0017 0041 0017 0041 0016 0180"

  - platform: restart
    name: "Restart Device"


# Display current mode in HA
text_sensor:
  - platform: template
    name: Set Mode
    id: set_mode
    lambda: return id(fan_mode_output);
    update_interval: never